import com.rameses.common.*
import com.rameses.annotations.*
import com.rameses.services.extended.*

class RequestReportService
{
	@ActiveDB(value='request_report', em="request") //use this if wala sa schema
	def em

	@DataContext(value="request_attachments", adapter="request")
	def em_attachments

	@DataContext(value="requestlog", adapter="request")
	def em_log

	@ProxyMethod
	public def buildDataSheetReport(xx){
		if (!xx.params)
			xx.params = ''
		xx.params += '%'
		def list = em.getList(xx)

		//load attachments
		list.each{request ->
			request.attachments=getAttachments(request)
			request.logs=getLogs(request)
		}
		return list
	}

	def getAttachments(request){
		def attachments = em_attachments.select('name,description')
									.find([parent_objid:request.objid])
									.orderBy('name')
									.list() 
		if (attachments.size() < 6){
			attachments.size().upto(5){
			attachments << [:]
			}
		}
		return attachments
	}

	def getLogs(request){
		def logs = em_log.select('username,txndate,action,subject,description,actionTaken,status')
									.find([refid:request.objid])
									.orderBy('txndate')
									.list()
		if (logs.size() < 6){
			logs.size().upto(5){
				logs << [:]
			}
		}
		return logs
	}


	@ProxyMethod
	public def buildReport(params){
		//allow lastname search only using searchtext
		if (!params.subject)
		params.subject = ''
		params.subject += '%'
		def list = em.getList(params)

		return list
	}
}